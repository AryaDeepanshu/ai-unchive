import{DescriptorGenerator}from"./aia_reader.js";import{View}from"../views/view.js";export class AIProject{constructor(e){this.name=e,this.screens=[],this.extensions=[],this.assets=[]}addAssets(e){for(let t of e)this.addAsset(t)}addScreens(e){for(let t of e)this.addScreen(t)}addExtensions(e){for(let t of e)this.addExtension(t)}addAsset(e){if(!(e instanceof AIAsset))throw new TypeError("Attempt to add "+typeof e+" to AIProject");this.assets.push(e)}addScreen(e){if(!(e instanceof AIScreen))throw new TypeError("Attempt to add "+typeof e+" to AIProject");this.screens.push(e)}addExtension(e){if(!(e instanceof AIExtension))throw new TypeError("Attempt to add "+typeof e+" to AIProject");this.extensions.push(e)}}export class AIScreen{async init(e,t,s,r){if(this.addToProject(r),this.form=await this.generateSchemeData(e),this.generateBlocks(t),this.name=s,null==s)throw new TypeError("Screen name cannot be null!");return this}addToProject(e){if(!(e instanceof AIProject))throw new TypeError("Attempt to set "+typeof e+"as project of AIScreen");this.project=e}async generateSchemeData(e){var t=JSON.parse(e.substring(9,e.length-3));return this.generateComponent(t.Properties)}async generateComponent(e){var t,s=this.project.extensions.find(t=>t.name.split(".").pop()==e.$Type);if(null!=s){var r=s.descriptorJSON;t="EXTENSION"}else t="BUILT-IN";var o=new Component(e.$Name,e.$Type,e.Uuid||0,t);o.properties=await o.loadProperties(e,r||null);for(let t of e.$Components||[])o.addChild(await this.generateComponent(t));return o}generateBlocks(e){this.blocks=e}}class Component{constructor(e,t,s,r){this.name=e,this.type=t,this.uid=s,this.children=[],this.origin=r,this.properties=[],this.faulty=!1}loadProperties(e,t){return new Promise(async(s,r)=>{null==AIProject.descriptorJSON&&(AIProject.descriptorJSON=await DescriptorGenerator.generate());var o=new Worker("unchive/property_processor.js");try{o.postMessage({type:this.name,propertyJSON:e,descriptorJSON:(t||AIProject.descriptorJSON.find(e=>e.type=="com.google.appinventor.components.runtime."+this.type)).properties||[]})}catch(e){console.log("Error in "+this.name+"("+this.uid+" / "+this.type+"), message: "+e.message),this.faulty=!0,s([]),o.terminate()}o.addEventListener("message",e=>{s(e.data.properties),o.terminate()})})}addChild(e){if(!(e instanceof Component))throw new TypeError("Attempt to add "+typeof e+" to Component.");this.children.push(e)}}export class AIExtension{constructor(e,t){this.name=e,this.descriptorJSON=t}}export class AIAsset{constructor(e,t,s){this.name=e,this.type=t,this.blob=s,this.size=s.size,this.url=""}getURL(){return""==this.url&&(this.url=URL.createObjectURL(this.blob)),this.url}revokeURL(){URL.revokeObjectURL(this.url)}}export class BlocklyWorkspace{constructor(e){this.workspaceView=new View("DIV"),this.loaded=!1,this.blocks=e,this.faulty=!1,this.validTypes=["global_declaration","component_event","procedures_defnoreturn","procedures_defreturn"]}initializeWorkspace(){this.loaded?this.resizeWorkspace():(this.loaded=!0,this.workspace=Blockly.inject(this.workspaceView.domElement,{toolbox:!1,trashcan:!1,readOnly:!0,scrollbars:!1}),this.workspace.setScale(1),this.workspace.getDescriptor=function(e){let t=AIProject.descriptorJSON.find(t=>t.type=="com.google.appinventor.components.runtime."+e);if(null==t)for(let t of RootPanel.project.extensions)if(t.name.split(".").pop()==e)return t.descriptorJSON;return t},this.addBlocksToWorkspace(),this.resizeWorkspace())}addBlocksToWorkspace(){try{Blockly.Xml.domToBlock(this.blocks,this.workspace).setCollapsed(!1)}catch(e){this.faulty=!0}finally{-1==this.validTypes.indexOf(this.blocks.getAttribute("type"))&&(this.faulty=!0)}}resizeWorkspace(){let e=this.workspace.getMetrics();this.workspaceView.setAttribute("style","height: "+e.contentHeight+"px;width: "+e.contentWidth+"px;"),Blockly.svgResize(this.workspace)}getWorkspaceView(){return this.workspaceView}}